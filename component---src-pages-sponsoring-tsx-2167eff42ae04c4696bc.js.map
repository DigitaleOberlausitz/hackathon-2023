{"version":3,"file":"component---src-pages-sponsoring-tsx-2167eff42ae04c4696bc.js","mappings":"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","sources":["webpack://hackathon-2023/./src/components/SponsoringContractForm.tsx","webpack://hackathon-2023/./src/pages/sponsoring.tsx"],"sourcesContent":["import React, {ChangeEvent, Dispatch, FC, SetStateAction, useId, useState} from 'react';\nimport './SponsoringContactForm.scss';\n\ntype HandleChangeType = (setter: Dispatch<SetStateAction<string>>) =>\n    (event: ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) =>\n        void;\nconst handleChange: HandleChangeType = (setter) =>\n    (event) =>\n        setter(event.target.value);\n\ntype SponsoringContractFormProps = { onShowResultPage: (e: boolean) => void };\nexport const SponsoringContractForm: FC<SponsoringContractFormProps> = ({onShowResultPage}) => {\n    const emailAddressId = useId();\n    const contactPersonFullNameId = useId();\n    const sponsoringLevelId = useId();\n    const addressLinesId = useId();\n    const honeypot1Id = useId();\n    const honeypot2Id = useId();\n    const [emailAddress, setEmailAddress] = useState<string>('');\n    const [contactPersonFullName, setContactPersonFullName] = useState<string>('');\n    const [sponsoringLevel, setSponsoringLevel] = useState<string>('gold');\n    const [address, setAddress] = useState<string>('');\n    const [honeypot1, setHoneypot1] = useState<string>('');\n    const [honeypot2, setHoneypot2] = useState<string>('');\n    const [resultMessage, setResultMessage] = useState<string | null>(null);\n    const handleSubmit = () => {\n        const addressLines = address.split(/\\n|\\r\\n?/);\n        const messages = [];\n        if (honeypot1 || honeypot2)\n            messages.push('Tiefsinnig! Wir werden sehr angestrengt über Ihre Anmerkungen nachdenken.');\n        if (!contactPersonFullName.match(/^[A-Z\\x80-\\xff][\\x21-\\xff]*( [A-Z\\x80-\\xff][\\x21-\\xff]*)+$/i))\n            messages.push('Ein sehr interessanter Name, den Sie da haben. Wir melden uns vielleicht mal.');\n        if (!emailAddress.match(/^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-z0-9-]+)+$/i))\n            messages.push('Wenn wir es schaffen sollten, an diese Adresse eine E-Mail zu schicken, haben wir uns Firmenanteile verdient, oder?');\n        if (addressLines.length < 2)\n            messages.push('Wir wollten Sie an Ihrer Anschrift besuchen, aber wir laufen immer noch auf dem Postplatz im Kreis.');\n        if (addressLines.length > 6)\n            messages.push('Wir fragen uns, wie die Leute in Ihrer Firma morgens zur Arbeit finden. Wir haben die erste Zeile jetzt schon wieder vergessen.');\n        //\n        if (messages.length) {\n            setResultMessage(messages.join('\\n\\n'));\n            onShowResultPage(true);\n        } else {\n            fetch(\n                'https://eoujoxzcnzrfkao.m.pipedream.net',\n                {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json; charset=UTF-8'},\n                    body: JSON.stringify({emailAddress, contactPersonFullName, sponsoringLevel, addressLines})\n                }\n            ).then(\n                response => setResultMessage('Vielen Dank für Ihre Anfrage. Sie sollten in Kürze eine E-Mail von SignWell erhalten, in der Sie einen Link zur Online-Unterschrift finden.'),\n                error => setResultMessage('Leider gab es ein technisches Problem. Wir bedauern sehr, dass es zu diesen Unannehmlichkeiten gekommen ist, bitte schreiben Sie uns an hackathon@digitale-oberlausitz.eu'),\n            );\n            setResultMessage('Ihre Anfrage wird bearbeitet...')\n            onShowResultPage(true);\n        }\n    };\n    return <>\n        {resultMessage?.split(/\\n+/g).map((p, i) => <p key={i}>{p}</p>)\n        || [\n            <h2>Sponsoring-Vertrag anfordern</h2>,\n            <div className='SponsoringContractForm'>\n                <div className='label'><label htmlFor={sponsoringLevelId}>Sponsoring-Paket</label></div>\n                <div className='control'>\n                    <select id={sponsoringLevelId} value={sponsoringLevel} onChange={handleChange(setSponsoringLevel)}>\n                        <option value=\"gold\">Gold</option>\n                        <option value=\"silver\">Silber</option>\n                        <option value=\"bronze\">Bronze</option>\n                    </select>\n                </div>\n                <div className='label'><label htmlFor={contactPersonFullNameId}>Name Kontaktperson</label></div>\n                <div className='control'>\n                    <input id={contactPersonFullNameId} value={contactPersonFullName}\n                           onChange={handleChange(setContactPersonFullName)} type=\"text\"/>\n                </div>\n                <div className='label ziszoshyfgonpumkyn'><label htmlFor={honeypot1Id}>Lorem ipsum</label></div>\n                <div className='control ziszoshyfgonpumkyn'>\n                    <input tabIndex={6} id={honeypot1Id} value={honeypot1} onChange={handleChange(setHoneypot1)} type=\"text\"/>\n                </div>\n                <div className='label'><label htmlFor={emailAddressId}>E-Mail-Adresse Kontaktperson</label></div>\n                <div className='control'>\n                    <input id={emailAddressId} value={emailAddress} onChange={handleChange(setEmailAddress)}\n                           type=\"text\"/>\n                </div>\n                <div className='label'><label htmlFor={addressLinesId}>Name und Anschrift Firma</label></div>\n                <div className='control'>\n                    <textarea rows={6} id={addressLinesId} value={address}\n                              onChange={handleChange(setAddress)}/>\n                </div>\n                <div className='label ziszoshyfgonpumkyn'><label htmlFor={honeypot2Id}>Lorem ipsum dolor sit\n                    amet</label></div>\n                <div className='control ziszoshyfgonpumkyn'>\n                    <textarea tabIndex={7} rows={8} id={honeypot2Id} value={honeypot2} onChange={handleChange(setHoneypot2)}/>\n                </div>\n                <div className='label'/>\n                <div className='control'>\n                    <button onClick={handleSubmit}>Absenden</button>\n                </div>\n            </div>,\n            <p>Die in diesem Formular erfassten Daten werden von uns ausschließlich zum Zwecke der Erstellung eines\n                Sponsoring-Vertrags erhoben und verarbeitet. An dieser Verarbeitung sind beteiligt: Pipedream, Inc.\n                (San Francisco, CA, USA) für die Automatisierung der Vertragserstellung und Docsketch, LLC\n                (DBA SignWell; Portland, OR, USA) zur papierlosen Signierung und den damit verbundenen E-Mail-Verkehr.\n            </p>,\n        ]\n        }\n    </>;\n};\n","import React, { useState } from \"react\"\nimport { HeadFC, PageProps } from \"gatsby\"\nimport { Layout } from \"../components/layout\"\nimport ReactMarkdown from \"react-markdown\"\nimport { SponsoringContractForm } from \"../components/SponsoringContractForm\"\n\nconst SponsoringPage: React.FC<PageProps> = () => {\n    const [hideMarkdown, setHideMarkdown] = useState(false)\n\n    return (\n        <Layout>\n            {!hideMarkdown && (\n                <>\n                    <ReactMarkdown\n                        children={`\n# Wir sind auf der Suche nach weiteren Sponsoren\n\nWir sind auf der Suche nach weiteren Sponsoren, die unsere Veranstaltung finanziell unterstützen möchten.\n\nWenn Sie unsere Vision teilen, unterstützen Sie uns! Das eingeworbene Geld wird vollständig für die \nOrganisation des Hackathons sowie die Finanzierung von Preisen für die Teilnehmenden verwendet.\n\n**Am Ende dieser Seite finden Sie ein Anfrageformular oder melden Sie sich bei Interesse oder Fragen gerne unter [hackathon@digitale-oberlausitz.eu](mailto:hackathon@digitale-oberlausitz.eu).**\n\n## Bronze-Paket  (256 Euro)\n\n- Nennung als Veranstaltungsparter auf Social-Media-Auftritten des Vereins\n- Flyer/Info-Material als Beigabe zu Infobeuteln für Teilnehmende\n- Erwähnung mit Logo auf Hackathon-Website\n- Erwähnung als Veranstaltungspartner durch uns bei Eröffnungsveranstaltung\n- kleines Logo auf Sponsoren-Poster bei der Veranstaltung\n- Erwähnung auf Werbe-Plakat (zeitlich befristed bis 31.08.2023)\n\n## Silber-Paket (512 Euro)\n- alles aus Bronze-Paket\n- Sponsor kann sich auf Eröffnungsveranstaltung selbst vorstellen (5 Min)\n- Zugang zu Offline-Job-Wall (Pinnwand) bei der Veranstaltung\n- Aufhängen von eigenen Plakaten (in Abstimmung mit uns)\n- mittleres Logo auf Sponsoren-Poster\n- Trailer/Poster auf Bildschirm-Wand im Durchlauf\n\n## Gold-Paket (1024 Euro)\n- alles aus Silber-Paket\n- stellen eines Jury-Mitglieds (Details des Jury-Prozesses folgen)\n- Zitat/Grußwort auf der Website (begrenzte Zeichenzahl, Foto von Personen + Logo möglich, Darstellung im Stile von Testimonials)\n- aufstellen eines Rollups (muss von Sponsor bereitgestellt werden)\n- großes Logo auf Sponsoring-Poster\n            `}\n                    />\n                </>\n            )}\n            <SponsoringContractForm onShowResultPage={setHideMarkdown} />\n        </Layout>\n    )\n}\n\nexport default SponsoringPage\n\nexport const Head: HeadFC = () => <title>Sponsoring</title>\n"],"names":["handleChange","setter","event","target","value","SponsoringContractForm","_ref","onShowResultPage","emailAddressId","useId","contactPersonFullNameId","sponsoringLevelId","addressLinesId","honeypot1Id","honeypot2Id","emailAddress","setEmailAddress","useState","contactPersonFullName","setContactPersonFullName","sponsoringLevel","setSponsoringLevel","address","setAddress","honeypot1","setHoneypot1","honeypot2","setHoneypot2","resultMessage","setResultMessage","React","split","map","p","i","key","className","htmlFor","id","onChange","type","tabIndex","rows","onClick","handleSubmit","addressLines","messages","push","match","length","join","fetch","method","headers","body","JSON","stringify","then","response","error","SponsoringPage","hideMarkdown","setHideMarkdown","Layout","ReactMarkdown","children","Head"],"sourceRoot":""}