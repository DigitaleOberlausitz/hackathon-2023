{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-22c3ab5d8354f1b0bd39.js","mappings":"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","sources":["webpack://hackathon-2023/./src/components/navbar/navbar.tsx","webpack://hackathon-2023/./src/components/layout.tsx","webpack://hackathon-2023/./src/components/SponsoringContractForm.tsx","webpack://hackathon-2023/./src/pages/{markdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import { Link } from \"gatsby\"\nimport React, { FC } from \"react\"\n\nimport \"./navbar.scss\"\n\nexport const Navbar: FC = () => (\n    <div className=\"navbar\">\n        <ul>\n            <li>\n                <Link to=\"/\">Allgemein</Link>\n            </li>\n            <li>\n                <Link to=\"/what-is-a-hackathon\">Was ist ein Hackathon?</Link>\n            </li>\n            <li>\n                <Link to=\"/challenges\">Challenge</Link>\n            </li>\n            {/*<li>*/}\n            {/*    <Link to=\"/results\">*/}\n            {/*        <strong>Ergebnisse</strong>*/}\n            {/*    </Link>*/}\n            {/*</li>*/}\n            <li>\n                <Link to=\"/sponsoring\">Sponsoren</Link>\n            </li>\n            <li>\n                <Link to=\"/participate\">Teilnehmen</Link>\n            </li>\n            <li>\n                <Link to=\"/support\">Unterstützen</Link>\n            </li>\n        </ul>\n        <div className=\"archive\">\n            <p>Archiv</p>\n            <ul>\n                <li>\n                    <a href=\"https://hackathon2022.digitale-oberlausitz.eu\">2022</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n)\n","import { Link } from \"gatsby\"\nimport React, { FC, PropsWithChildren } from \"react\"\nimport { Navbar } from \"./navbar/navbar\"\n\nimport \"typeface-roboto-mono\"\n\nimport \"./index.scss\"\nimport \"./App.scss\"\n\nexport const Layout: FC<PropsWithChildren> = ({ children }) => (\n    <div className=\"App\">\n        <div className=\"header dark\">\n            <div className=\"title\">\n                <p>\n                    <a href=\"https://www.digitale-oberlausitz.eu\">Digitale Oberlausitz e.V.</a> präsentiert:\n                </p>\n                <Link to=\"/\">\n                    <img id=\"hackathon-logo\" alt=\"Hackathon 2023 Home\" src=\"/hackathon2023-schriftzug.svg\" />\n                </Link>\n            </div>\n        </div>\n\n        <div className=\"main\">\n            <Navbar />\n\n            <main className=\"content\">{children}</main>\n        </div>\n\n        <div className=\"footer dark\">\n            <div className=\"footer-content\">\n                <Link to=\"/impressum\">Impressum</Link>\n                <Link to=\"/code-of-conduct\">Code of Conduct</Link>\n            </div>\n        </div>\n    </div>\n)\n","import React, {ChangeEvent, Dispatch, FC, SetStateAction, useId, useState} from 'react';\nimport './SponsoringContactForm.scss';\n\ntype HandleChangeType = (setter: Dispatch<SetStateAction<string>>) =>\n    (event: ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) =>\n        void;\nconst handleChange: HandleChangeType = (setter) =>\n    (event) =>\n        setter(event.target.value);\n\ntype SponsoringContractFormProps = { onShowResultPage: (e: boolean) => void };\nexport const SponsoringContractForm: FC<SponsoringContractFormProps> = ({onShowResultPage}) => {\n    const emailAddressId = useId();\n    const contactPersonFullNameId = useId();\n    const sponsoringLevelId = useId();\n    const addressLinesId = useId();\n    const honeypot1Id = useId();\n    const honeypot2Id = useId();\n    const [emailAddress, setEmailAddress] = useState<string>('');\n    const [contactPersonFullName, setContactPersonFullName] = useState<string>('');\n    const [sponsoringLevel, setSponsoringLevel] = useState<string>('gold');\n    const [address, setAddress] = useState<string>('');\n    const [honeypot1, setHoneypot1] = useState<string>('');\n    const [honeypot2, setHoneypot2] = useState<string>('');\n    const [resultMessage, setResultMessage] = useState<string | null>(null);\n    const handleSubmit = () => {\n        const addressLines = address.split(/\\n|\\r\\n?/);\n        const messages = [];\n        if (honeypot1 || honeypot2)\n            messages.push('Tiefsinnig! Wir werden sehr angestrengt über Ihre Anmerkungen nachdenken.');\n        if (!contactPersonFullName.match(/^[A-Z\\x80-\\xff][\\x21-\\xff]*( [A-Z\\x80-\\xff][\\x21-\\xff]*)+$/i))\n            messages.push('Ein sehr interessanter Name, den Sie da haben. Wir melden uns vielleicht mal.');\n        if (!emailAddress.match(/^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-z0-9-]+)+$/i))\n            messages.push('Wenn wir es schaffen sollten, an diese Adresse eine E-Mail zu schicken, haben wir uns Firmenanteile verdient, oder?');\n        if (addressLines.length < 2)\n            messages.push('Wir wollten Sie an Ihrer Anschrift besuchen, aber wir laufen immer noch auf dem Postplatz im Kreis.');\n        if (addressLines.length > 6)\n            messages.push('Wir fragen uns, wie die Leute in Ihrer Firma morgens zur Arbeit finden. Wir haben die erste Zeile jetzt schon wieder vergessen.');\n        //\n        if (messages.length) {\n            setResultMessage(messages.join('\\n\\n'));\n            onShowResultPage(true);\n        } else {\n            fetch(\n                'https://eoujoxzcnzrfkao.m.pipedream.net',\n                {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json; charset=UTF-8'},\n                    body: JSON.stringify({emailAddress, contactPersonFullName, sponsoringLevel, addressLines})\n                }\n            ).then(\n                response => setResultMessage('Vielen Dank für Ihre Anfrage. Sie sollten in Kürze eine E-Mail von SignWell erhalten, in der Sie einen Link zur Online-Unterschrift finden.'),\n                error => setResultMessage('Leider gab es ein technisches Problem. Wir bedauern sehr, dass es zu diesen Unannehmlichkeiten gekommen ist, bitte schreiben Sie uns an hackathon@digitale-oberlausitz.eu'),\n            );\n            setResultMessage('Ihre Anfrage wird bearbeitet...')\n            onShowResultPage(true);\n        }\n    };\n    return <>\n        {resultMessage?.split(/\\n+/g).map((p, i) => <p key={i}>{p}</p>)\n        || [\n            <h2>Sponsoring-Vertrag anfordern</h2>,\n            <div className='SponsoringContractForm'>\n                <div className='label'><label htmlFor={sponsoringLevelId}>Sponsoring-Paket</label></div>\n                <div className='control'>\n                    <select id={sponsoringLevelId} value={sponsoringLevel} onChange={handleChange(setSponsoringLevel)}>\n                        <option value=\"gold\">Gold</option>\n                        <option value=\"silver\">Silber</option>\n                        <option value=\"bronze\">Bronze</option>\n                    </select>\n                </div>\n                <div className='label'><label htmlFor={contactPersonFullNameId}>Name Kontaktperson</label></div>\n                <div className='control'>\n                    <input id={contactPersonFullNameId} value={contactPersonFullName}\n                           onChange={handleChange(setContactPersonFullName)} type=\"text\"/>\n                </div>\n                <div className='label ziszoshyfgonpumkyn'><label htmlFor={honeypot1Id}>Lorem ipsum</label></div>\n                <div className='control ziszoshyfgonpumkyn'>\n                    <input tabIndex={6} id={honeypot1Id} value={honeypot1} onChange={handleChange(setHoneypot1)} type=\"text\"/>\n                </div>\n                <div className='label'><label htmlFor={emailAddressId}>E-Mail-Adresse Kontaktperson</label></div>\n                <div className='control'>\n                    <input id={emailAddressId} value={emailAddress} onChange={handleChange(setEmailAddress)}\n                           type=\"text\"/>\n                </div>\n                <div className='label'><label htmlFor={addressLinesId}>Name und Anschrift Firma</label></div>\n                <div className='control'>\n                    <textarea rows={6} id={addressLinesId} value={address}\n                              onChange={handleChange(setAddress)}/>\n                </div>\n                <div className='label ziszoshyfgonpumkyn'><label htmlFor={honeypot2Id}>Lorem ipsum dolor sit\n                    amet</label></div>\n                <div className='control ziszoshyfgonpumkyn'>\n                    <textarea tabIndex={7} rows={8} id={honeypot2Id} value={honeypot2} onChange={handleChange(setHoneypot2)}/>\n                </div>\n                <div className='label'/>\n                <div className='control'>\n                    <button onClick={handleSubmit}>Absenden</button>\n                </div>\n            </div>,\n            <p>Die in diesem Formular erfassten Daten werden von uns ausschließlich zum Zwecke der Erstellung eines\n                Sponsoring-Vertrags erhoben und verarbeitet. An dieser Verarbeitung sind beteiligt: Pipedream, Inc.\n                (San Francisco, CA, USA) für die Automatisierung der Vertragserstellung und Docsketch, LLC\n                (DBA SignWell; Portland, OR, USA) zur papierlosen Signierung und den damit verbundenen E-Mail-Verkehr.\n            </p>,\n        ]\n        }\n    </>;\n};\n","import React, { FC, useState } from \"react\"\nimport { Layout } from \"../components/layout\"\nimport { graphql, HeadFC, PageProps } from \"gatsby\"\nimport { SponsoringContractForm } from \"../components/SponsoringContractForm\";\n\nexport const query = graphql`\n    query ($id: String) {\n        markdownRemark(id: { eq: $id }) {\n            frontmatter {\n                slug\n                title\n            }\n            html\n        }\n    }\n`\n\ntype QueryResult = {\n    markdownRemark: {\n        frontmatter: {\n            slug: string\n            title: string\n        }\n        html: string\n    }\n}\n\nconst ContentPage: FC<PageProps<QueryResult>> = ({ data, children }) => {\n    const [hideMarkdown, setHideMarkdown] = useState(false);\n    const {html, frontmatter: {slug}} = data.markdownRemark;\n    return (\n        <Layout>\n            {!hideMarkdown && <div dangerouslySetInnerHTML={{__html: html}}/>}\n            {slug === 'sponsoring' && <SponsoringContractForm onShowResultPage={setHideMarkdown}/>}\n        </Layout>\n    );\n}\n\nexport default ContentPage\nexport const Head: HeadFC<QueryResult> = ({ data }) => <title>{data.markdownRemark.frontmatter.title}</title>\n"],"names":["Navbar","React","className","Link","to","href","Layout","_ref","children","id","alt","src","handleChange","setter","event","target","value","SponsoringContractForm","onShowResultPage","emailAddressId","useId","contactPersonFullNameId","sponsoringLevelId","addressLinesId","honeypot1Id","honeypot2Id","emailAddress","setEmailAddress","useState","contactPersonFullName","setContactPersonFullName","sponsoringLevel","setSponsoringLevel","address","setAddress","honeypot1","setHoneypot1","honeypot2","setHoneypot2","resultMessage","setResultMessage","split","map","p","i","key","htmlFor","onChange","type","tabIndex","rows","onClick","addressLines","messages","push","match","length","join","fetch","method","headers","body","JSON","stringify","then","response","error","data","hideMarkdown","setHideMarkdown","html","frontmatter","slug","markdownRemark","dangerouslySetInnerHTML","__html","Head","_ref2","title"],"sourceRoot":""}